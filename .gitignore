import re
import time
from deep_translator import GoogleTranslator
from tqdm import tqdm
import pypinyin

# 定义文件路径
file_path = r'C:/downloadXxx.txt'
output_file_path = r'C:/downloadXxx_processed.txt'

# 中文标点与英文标点的映射
punctuation_map = {
    '，': ',', '。': '.', '！': '!', '？': '?', 
    '：': ':', '；': ';', '“': '"', '”': '"', 
    '‘': "'", '’': "'", '（': '(', '）': ')', 
    '【': '[', '】': ']', '、': ','
}

def convert_punctuation(text):
    for zh, en in punctuation_map.items():
        text = text.replace(zh, en)
    return text

def add_space_after_punctuation(text):
    """在标点符号后添加空格"""
    return re.sub(r'([,.:;!?()"\[\]])(?=\S)', r'\1 ', text)

def translate_text(text):
    """翻译中文文本，并确保单词之间有空格"""
    success = False
    retries = 25
    for attempt in range(retries):
        try:
            translated_text = GoogleTranslator(source='zh-CN', target='en').translate(text)
            translated_text = add_space_after_punctuation(translated_text)  # 添加标点后空格
            return ' '.join(translated_text.split())  # 确保单词之间有空格
        except Exception as e:
            print(f"翻译失败: {e}，正在重试... 第 {attempt + 1} 次")
            time.sleep(1)
    print(f"文本 '{text}' 翻译失败，已跳过。")
    return text  # 返回原文本以便处理

def replace_fullwidth_with_halfwidth(text):
    """替换全角符号为半角符号"""
    for full, half in punctuation_map.items():
        text = text.replace(full, half)
    return text

def process_lines(lines):
    processed_lines = []
    for line in tqdm(lines, desc="处理文件"):
        line = convert_punctuation(line)

        if line.startswith('K1'):
            line = format_with_space(line)
            # 翻译中文部分
            line = re.sub(r'[\u4e00-\u9fff]+', lambda m: translate_text(m.group(0)), line)

        elif line.startswith(('AT', 'AU')):
            name = line[2:].strip()
            pinyin_name = ' '.join(pypinyin.lazy_pinyin(name)).replace(';', '; ')
            processed_lines.append(f"{line[:2]} {pinyin_name}\n")
            continue
        
        elif line.startswith('UT'):
            match = re.search(r'CNKI:(.*?)#', line)
            if match:
                name = match.group(1).strip()
                pinyin_name = ' '.join(pypinyin.lazy_pinyin(name)).replace(';', '; ')
                line = line.replace(name, pinyin_name)

        # 其余中文翻译为英文
        line = re.sub(r'[\u4e00-\u9fff]+', lambda m: translate_text(m.group(0)), line)
        line = format_with_space(line)  # 确保符号后有空格
        processed_lines.append(line)

    return [replace_fullwidth_with_halfwidth(line) for line in processed_lines]

# 读取文件内容并处理
with open(file_path, 'r', encoding='utf-8') as file:
    lines = file.readlines()

processed_lines = process_lines(lines)

# 将处理后的内容保存为新文件
with open(output_file_path, 'w', encoding='utf-8') as file:
    file.writelines(processed_lines)

print(f"文件已成功处理并保存至: {output_file_path}")
